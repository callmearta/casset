{"version":3,"sources":["ui/loading.js","state/actions/player.js","state/constants/player.js","ui/music.js","ui/musicsContainer.js","ui/playlist.js","ui/playlistsContainer.js","ui/artist.js","ui/artistsContainer.js","ui/vitrine.js","helpers/api.js","pages/home/index.js","state/actions/home.js","state/constants/home.js","ui/track.js","pages/playlist/index.js","pages/playlists/index.js","ui/album.js","ui/albumsContainer.js","pages/search/index.js","routes/routes.js","state/actions/search.js","state/constants/search.js","ui/header.js","ui/player.js","helpers/region.js","ui/sidebar.js","routes/router.js","state/reducers/home.js","state/reducers/player.js","state/reducers/search.js","state/store.js","App.js","serviceWorker.js","index.js","assets/images/logo.svg"],"names":["Loading","props","loading","className","children","togglePlayMusic","dispatch","setInitialized","type","setMusic","payload","setPlaylist","connect","state","currentMusic","playerReducer","music","isPlaying","PlayerActions","togglePlay","onClick","setCurrentPlaylist","id","src","cover","alt","title","name","artists","length","map","artist","i","playlist","musics","handlePlaylist","reduce","p1","p2","find","t","key","withRouter","history","push","image","PlaylistsContainer","playlists","settings","dots","infinite","speed","slidesToScroll","variableWidth","noSlide","ArtistsContainer","Vitrine","data","hero","API_URL","onSuccessHandler","res","resolve","onErrorHandler","err","response","console","error","Api","getMusics","region","Promise","axios","url","method","then","catch","getPlaylistsVitrines","count","getPlaylistById","getSearch","query","homeState","homeReducer","fetchMusicsFind","a","result","success","Actions","fetchVitrines","vitrines","currentRegion","match","params","useEffect","musicsFind","vitrine","thumbnail","play_count","useState","playlistId","fetchPlaylist","replace","Fragment","categories","category","Album","album","AlbumsContainer","albums","Routes","routeName","component","Home","exact","path","Playlist","Playlists","searchReducer","fetchResult","Object","keys","substring","toUpperCase","matchPath","location","pathname","setQuery","timeout","useRef","to","target","Logo","placeholder","onChange","evt","current","clearTimeout","setTimeout","onInputChange","value","currentPos","duration","initialized","setPos","pos","setDuration","setCurrentMusic","audio","Audio","currentPosInterval","onended","handleNextSong","nextTrack","currentSongIndex","findIndex","track","handlePlay","link320","link128","link64","onloadedmetadata","play","setInterval","currentTime","clearInterval","pause","parseInt","ReactSlider","thumbClassName","trackClassName","renderThumb","sec","secs","min","max","prevTrack","RegionHandler","persian","slug","global","init","store","get","set","Router","Page","index","initialState","action","reducers","combineReducers","createStore","applyMiddleware","thunk","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.a09e6600.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Loading(props) {\n    if (props.loading) {\n        return <div className=\"loading\"><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>;\n    } else {\n        return props.children;\n    }\n}\n\nexport default Loading;","import * as Consts from '../constants/player';\n\nexport const togglePlayMusic = () => {\n    return dispatch => {\n        dispatch(setInitialized(true));\n        return dispatch({ type: Consts.TOGGLE_PLAY });\n    }\n}\n\nexport const setMusic = (payload) => {\n    return { type: Consts.SET_MUSIC, payload };\n};\n\nexport const setPlaylist = (payload) => {\n    return { type: Consts.SET_PLAYLIST, payload };\n}\n\nexport const setPos = (payload) => {\n    return { type: Consts.SET_POS, payload };\n}\n\nexport const setDuration = (payload) => {\n    return { type: Consts.SET_DURATION, payload };\n}\n\nexport const setInitialized = (payload) => {\n    return { type: Consts.SET_INITIALIZED, payload };\n}","export const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const SET_MUSIC = \"SET_MUSIC\";\nexport const SET_PLAYLIST = \"SET_PLAYLIST\";\nexport const SET_POS = \"SET_POS\";\nexport const SET_DURATION = \"SET_DURATION\";\nexport const SET_INITIALIZED = \"SET_INITIALIZED\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Music(props) {\n    const { music, currentMusic, setMusic, togglePlay, isPlaying } = props;\n\n    const handleClick = () => {\n        props.setCurrentPlaylist();\n        if (currentMusic.id === music.id) {\n            return togglePlay();\n        }\n        return setMusic(music);\n    }\n\n    return (\n        <div className=\"music-wrapper\" onClick={handleClick}>\n            <div className=\"music-wrapper__image\">\n                {currentMusic.id === music.id ?\n                    <div className=\"music-wrapper__image__overlay\">\n                        <i className={\"fal \" + (isPlaying ? 'fa-pause' : 'fa-play')}></i>\n                    </div>\n                    : ''}\n                <img src={music.cover} alt={music.title} />\n            </div>\n            <div className=\"music-wrapper__body\">\n                <strong>{music.name}</strong>\n                <small>{music.artists.length > 1 ? music.artists.map((artist, i) => artist.name + (i !== music.artists.length - 1 ? ', ' : '')) : music.artists[0].name}</small>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMusic: music => dispatch(PlayerActions.setMusic(music)),\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic())\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Loading from './loading';\nimport Music from './music';\nimport * as PlayerActions from '../state/actions/player';\n\nfunction MusicSlider(props) {\n    const { musics, loading, title, setCurrentPlaylist } = props;\n\n    const handlePlaylist = () => {\n        setCurrentPlaylist(musics.reduce((p1, p2) => {\n            return p1.find(t => t.id === p2.id) ? p1 : [...p1, p2]\n        }, []));\n    }\n\n    return (\n        <Loading\n            loading={loading}\n        >\n            <h2 className=\"section-title\">{title}</h2>\n            <div className=\"musics-container\">\n                <div className=\"musics-container__inner\">\n                    {musics.map((music, i) => <Music setCurrentPlaylist={handlePlaylist} key={i} music={music} />)}\n                </div>\n            </div>\n        </Loading>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentPlaylist: playlist => dispatch(PlayerActions.setPlaylist(playlist))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(MusicSlider);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction Playlist(props) {\n    const { playlist } = props;\n\n    return (\n        <div className=\"music-wrapper playlist-wrapper\" onClick={() => props.history.push(`/playlist/${playlist.id}`)}>\n            <div className=\"music-wrapper__image playlist-wrapper__image\">\n                <img src={playlist.image} alt={playlist.name} />\n            </div>\n            <div className=\"music-wrapper__body playlist-wrapper__body\">\n                <strong>{playlist.name}</strong>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Playlist);","import React, { useState } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport Playlist from './playlist';\n\nfunction PlaylistsContainer(props) {\n    const { playlists } = props;\n\n    let settings = {\n        dots: false,\n        infinite: false,\n        speed: 250,\n        slidesToScroll: 1,\n        variableWidth: true\n    };\n\n    return (\n        <div className={\"musics-container playlists-container\" + (props.noSlide ? ' no-slide' : '')}>\n            {!props.noSlide ?\n                <Slider {...settings}>\n                    {playlists.map((playlist, i) => <div key={i} className=\"slick-item-outer\"><Playlist playlist={playlist} /></div>)}\n                </Slider> :\n                playlists.map((playlist, i) => <div key={i} className=\"slick-item-outer\"><Playlist playlist={playlist} /></div>)\n            }\n        </div>\n    );\n}\n\nexport default PlaylistsContainer;","import React from 'react';\n\nimport { withRouter } from 'react-router';\n\nfunction Artist(props) {\n    const { artist } = props;\n\n    return (\n        <div className=\"artist-wrapper\">\n            <div className=\"artist-wrapper__image\">\n                <img src={artist.image} alt={artist.name} />\n            </div>\n            <div className=\"artist-wrapper__body\">\n                <strong>{artist.name}</strong>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Artist);","import React, { useState } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport Artist from './artist';\n\nfunction ArtistsContainer(props) {\n    const { artists } = props;\n\n    let settings = {\n        dots: false,\n        infinite: false,\n        speed: 250,\n        slidesToScroll: 1,\n        variableWidth: true\n    };\n\n    return (\n        <div className={\"musics-container artists-container\" + (props.noSlide ? ' no-slide' : '')}>\n            {!props.noSlide ?\n                <Slider {...settings}>\n                    {artists.map((artist, i) => <div key={i} className=\"slick-item-outer\"><Artist artist={artist} /></div>)}\n                </Slider> :\n                artists.map((artist, i) => <div key={i} className=\"slick-item-outer\"><Artist artist={artist} /></div>)\n            }\n        </div>\n    );\n}\n\nexport default ArtistsContainer;","import React from 'react';\n\nimport MusicsContainer from './musicsContainer';\nimport PlaylistsContainer from './playlistsContainer';\nimport ArtistsContainer from './artistsContainer';\n\nfunction Vitrine(props) {\n    const { name, type, data } = props.data;\n\n    return (\n        <div className={\"vitrine-wrapper\" + (props.hero ? ' hero-wrapper' : '')}>\n            {type !== 'ad' ? <h2 className=\"section-title vitrine-title\">{name}</h2> : ''}\n            {\n                {\n                    'musics': <MusicsContainer musics={data} loading={false} />,\n                    'artists': <ArtistsContainer artists={data} />,\n                    'grid': <MusicsContainer musics={data} loading={false} />,\n                    'playlists': <PlaylistsContainer playlists={data} loading={false} />,\n                    'hero_sliders': <PlaylistsContainer playlists={data} loading={false} />,\n                    'genres': <PlaylistsContainer playlists={data} loading={false} />,\n                    'albums': <PlaylistsContainer playlists={data} loading={false} />\n                }\n                [type]\n            }\n        </div>\n    );\n}\n\nexport default Vitrine;","import axios from 'axios';\n\nconst API_URL = \"https://cassetmusic.com/api/v1\";\n\nconst onSuccessHandler = (res, resolve) => {\n    return resolve(res.data);\n}\n\nconst onErrorHandler = (err, resolve) => {\n    if (err.response) {\n        resolve(err.response.data);\n    }\n    return console.error(err);\n}\n\nconst Api = {\n    getMusics: (region = 'us') => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/musics?region=${region}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getPlaylistsVitrines: (region = 'us', count = 10) => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/playlists/vitrines?count=${count}&region=${region}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getPlaylistById: (id) => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/playlist?id=${id}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getSearch: (query) => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/search?name=${query}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    }\n};\n\nexport default Api;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport MusicsContainer from '../../ui/musicsContainer';\nimport Vitrine from '../../ui/vitrine';\nimport * as Actions from '../../state/actions/home';\nimport Loading from '../../ui/loading';\n\nfunction Home(props) {\n    const { homeState, fetchMusicsFind, fetchVitrines } = props;\n    const currentRegion = props.match.params.region || 'global';\n\n    useEffect(() => {\n        if (!homeState[currentRegion].musicsFind.data.length) {\n            fetchMusicsFind(currentRegion);\n        }\n        if (!homeState[currentRegion].vitrines.data.length) {\n            fetchVitrines(currentRegion);\n        }\n    }, []);\n\n    return (\n        <main className=\"container\">\n            <MusicsContainer title=\"Discover New Music\" musics={homeState[currentRegion].musicsFind.data} loading={homeState[currentRegion].musicsFind.loading} />\n            {homeState[currentRegion].vitrines.loading ? <Loading loading={true} ></Loading> :\n                homeState[currentRegion].vitrines.data.map((vitrine, i) =>\n                    vitrine.type === 'hero_sliders' ?\n                        <Vitrine hero key={i} data={vitrine} /> :\n                        <Vitrine key={i} data={vitrine} />)\n            }\n        </main>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        homeState: state.homeReducer\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchMusicsFind: region => dispatch(Actions.fetchMusicsFind(region)),\n        fetchVitrines: region => dispatch(Actions.fetchVitrines(region))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Home));","import * as Consts from '../constants/home';\nimport * as PlayerActions from '../actions/player';\n\nimport Api from '../../helpers/api';\n\nexport const fetchMusicsFind = (region) => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_MUSICS_FIND, region });\n        const result = await Api.getMusics(region === 'global' ? 'us' : 'ir');\n        if (result.success) {\n            const musics = result.data;\n            dispatch(PlayerActions.setMusic(musics[0]));\n            dispatch(PlayerActions.setPlaylist(musics));\n            dispatch(PlayerActions.setInitialized(true));\n            dispatch(PlayerActions.togglePlayMusic());\n            return dispatch({ payload: musics, type: Consts.FETCH_MUSICS_FIND_SUCCESS, region });\n        } else {\n            return dispatch({ type: Consts.FETCH_MUSICS_FIND_FAILED, region });\n        }\n    };\n};\n\nexport const fetchVitrines = (region) => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_VITRINES, region });\n        const result = await Api.getPlaylistsVitrines(region === 'global' ? 'us' : 'ir');\n        if (result.success) {\n            const vitrines = result.data;\n            return dispatch({ payload: vitrines, type: Consts.FETCH_VITRINES_SUCCESS, region });\n        } else {\n            return dispatch({ type: Consts.FETCH_VITRINES_FAILED, region });\n        }\n    }\n};","export const FETCH_MUSICS_FIND = \"FETCH_MUSICS_FIND\";\nexport const FETCH_MUSICS_FIND_SUCCESS = \"FETCH_MUSICS_FIND_SUCCESS\";\nexport const FETCH_MUSICS_FIND_FAILED = \"FETCH_MUSICS_FIND_FAILED\";\nexport const FETCH_VITRINES = \"FETCH_VITRINES\";\nexport const FETCH_VITRINES_SUCCESS = \"FETCH_VITRINES_SUCCESS\";\nexport const FETCH_VITRINES_FAILED = \"FETCH_VITRINES_FAILED\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Track(props) {\n    const { music, currentMusic, setMusic, togglePlay, isPlaying } = props;\n\n    const handleClick = () => {\n        props.setCurrentPlaylist();\n        if (currentMusic.id === music.id) {\n            return togglePlay();\n        }\n        return setMusic(music);\n    }\n\n    return (\n        <div className={\"track\" + (currentMusic.id === music.id ? ' active' : '')} onClick={handleClick}>\n            <div className=\"track__image\">\n                <img src={music.thumbnail && music.thumbnail.length ? music.thumbnail : music.cover} alt={music.name} />\n            </div>\n            <div className=\"track__body\">\n                <div className=\"d-flex align-items-center justify-content-start\">\n                    <h2>{music.name}</h2>\n                    <h3>{music.artists.map((artist, i) => artist.name + (i !== music.artists.length - 1 ? ', ' : ''))}</h3>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-end\">\n                    <b className=\"play-count\">{music.play_count || '-'} <small>plays</small></b>\n                    {currentMusic.id === music.id ?\n                        (isPlaying ?\n                            <i className=\"fal fa-pause\"></i>\n                            : <i className=\"fal fa-play\"></i>)\n                        : <i className=\"fal fa-play\"></i>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMusic: music => dispatch(PlayerActions.setMusic(music)),\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic())\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Track);","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Track from '../../ui/track';\nimport Api from '../../helpers/api';\nimport Loading from '../../ui/loading';\nimport PlaylistsContainer from '../../ui/playlistsContainer';\n\nimport * as PlayerActions from '../../state/actions/player';\n\nfunction Playlist(props) {\n    const { setCurrentPlaylist } = props;\n    const [playlistId] = useState(props.match.params.id);\n    const [playlist, setPlaylist] = useState({\n        data: {},\n        loading: true\n    });\n\n    const fetchPlaylist = async () => {\n        setPlaylist({ ...playlist, loading: true });\n        const result = await Api.getPlaylistById(playlistId);\n        if (result.success) {\n            if (result.data.musics) {\n                // Removing Duplicate ID musics\n                setPlaylist({\n                    data: {\n                        ...result.data,\n                        musics: result.data.musics.reduce((p1, p2) => {\n                            return p1.find(t => t.id === p2.id) ? p1 : [...p1, p2]\n                        }, [])\n                    }\n                    , loading: false\n                });\n            } else {\n                setPlaylist({ data: result.data, loading: false });\n            }\n        } else {\n            props.history.replace('/');\n        }\n    };\n\n    const handlePlaylist = () => {\n        setCurrentPlaylist(playlist.data.musics.reduce((p1, p2) => {\n            return p1.find(t => t.id === p2.id) ? p1 : [...p1, p2]\n        }, []));\n    }\n\n    useEffect(() => {\n        if (playlistId) {\n            fetchPlaylist();\n        }\n    }, []);\n\n    return (\n        <main className=\"container\">\n            {playlist.loading ? <Loading loading={playlist.loading}></Loading> :\n                playlist.data.musics ? <React.Fragment>\n                    <div className=\"d-flex align-items-center justify-content-center flex-column\">\n                        <div className=\"circle-image\">\n                            <img src={playlist.data.playlist.image} alt={playlist.data.playlist.name} />\n                        </div>\n                        <h1>{playlist.data.playlist.name}</h1>\n                        <small className=\"playlist-artists mt-5\">{playlist.data.artists.map((artist, i) => artist.name + (i !== playlist.data.artists.length - 1 ? ', ' : ''))}</small>\n                        <div className=\"tags-wrapper\">\n                            {playlist.data.categories.map((category, i) => <span key={i} className=\"tag\">{category.name}</span>)}\n                        </div>\n                    </div>\n                    <div className=\"tracks-wrapper\">\n                        {playlist.data.musics.map((music, i) => <Track setCurrentPlaylist={handlePlaylist} music={music} key={i} />)}\n                    </div>\n                </React.Fragment> :\n                    <React.Fragment>\n                        <h1 className=\"section-title\">Playlists</h1>\n                        <PlaylistsContainer playlists={playlist.data} />\n                    </React.Fragment>\n            }\n        </main>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentPlaylist: playlist => dispatch(PlayerActions.setPlaylist(playlist))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(Playlist));","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Track from '../../ui/track';\nimport Api from '../../helpers/api';\nimport Loading from '../../ui/loading';\nimport PlaylistsContainer from '../../ui/playlistsContainer';\n\nfunction Playlist(props) {\n    const playlistId = props.match.params.id;\n    const [playlist, setPlaylist] = useState({\n        data: {},\n        loading: true\n    });\n\n    const fetchPlaylist = async () => {\n        setPlaylist({ ...playlist, loading: true });\n        const result = await Api.getPlaylistById(playlistId);\n        if (result.success) {\n            setPlaylist(result.data);\n        } else {\n            props.history.replace('/');\n        }\n    };\n\n    useEffect(() => {\n        if (playlistId) {\n            fetchPlaylist();\n        }\n    }, []);\n\n    return (\n        <main className=\"container\">\n            <PlaylistsContainer playlists={playlist.data} loading={false} />\n        </main>\n    );\n}\n\nexport default withRouter(Playlist);","import React from 'react';\n\nfunction Album(props) {\n    const { album } = props;\n\n    return (\n        <div className=\"music-wrapper\">\n            <div className=\"music-wrapper__image\">\n                <img src={album.image} alt={album.title} />\n            </div>\n            <div className=\"music-wrapper__body\">\n                <strong>{album.name}</strong>\n                <small>{album.artists.length > 1 ? album.artists.map((artist, i) => artist.name + (i !== album.artists.length - 1 ? ', ' : '')) : album.artists[0].name}</small>\n            </div>\n        </div>\n    );\n}\n\nexport default Album;","import React from 'react';\n\nimport Album from './album';\n\nfunction AlbumsContainer(props) {\n    const { albums } = props;\n\n    return (\n        <div className=\"musics-container\">\n            <div className=\"musics-container__inner\">\n                {albums.map((album, i) => <Album key={i} album={album} />)}\n            </div>\n        </div>\n    );\n}\n\nexport default AlbumsContainer;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport * as Actions from '../../state/actions/search';\nimport PlaylistsContainer from '../../ui/playlistsContainer';\nimport MusicsContainer from '../../ui/musicsContainer';\nimport ArtistsContainer from '../../ui/artistsContainer';\nimport AlbumsContainer from '../../ui/albumsContainer';\nimport Loading from '../../ui/loading';\n\nfunction Search(props) {\n    const query = props.match.params.query;\n    const { fetchResult, result, loading } = props;\n\n    useEffect(() => {\n        fetchResult(query);\n    }, []);\n\n    return (\n        <main className=\"container\">\n            {loading ? <Loading loading={true}></Loading> :\n                result ? <div className=\"search-columns\">\n                    {Object.keys(result).map(key =>\n                        key !== 'clients' && result[key].length ?\n                            <section key={key}>\n                                <h2 className=\"section-title\">{key.substring(0, 1).toUpperCase() + key.substring(1, key.length)}</h2>\n                                {\n                                    {\n                                        'artists': <ArtistsContainer noSlide artists={result[key]} />,\n                                        'musics': <MusicsContainer musics={result[key]} />,\n                                        'albums': <AlbumsContainer albums={result[key]} />,\n                                        'playlists': <PlaylistsContainer noSlide playlists={result[key]} />\n                                    }\n                                    [key]\n                                }\n                            </section> : ''\n                    )}\n                </div> : ''\n            }\n        </main>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        result: state.searchReducer.result,\n        loading: state.searchReducer.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchResult: query => dispatch(Actions.fetchResult(query))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Search));","import Home from '../pages/home';\nimport Playlist from '../pages/playlist';\nimport Playlists from '../pages/playlists';\nimport Search from '../pages/search';\n\nconst Routes = [\n    {\n        routeName: 'home',\n        component: Home,\n        exact: true,\n        path: '/'\n    },\n    {\n        routeName: 'playlist',\n        component: Playlist,\n        exact: true,\n        path: '/playlist/:id'\n    },\n    {\n        routeName: 'playlists',\n        component: Playlists,\n        exact: true,\n        path: '/playlists/:id'\n    },\n    {\n        routeName: 'search',\n        component: Search,\n        exact: true,\n        path: '/search/:query'\n    },\n    {\n        routeName: 'region',\n        component: Home,\n        exact: true,\n        path: '/region/:region'\n    }\n];\n\nexport default Routes;","import * as Consts from '../constants/search';\nimport Api from '../../helpers/api';\n\nexport const fetchResult = query => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_RESULT });\n        const result = await Api.getSearch(query).catch(err => dispatch({ type: Consts.FETCH_RESULT_FAILED }));\n        if (result.success) {\n            dispatch({ type: Consts.FETCH_RESULT_SUCCESS, payload: result.data })\n        } else {\n            dispatch({ type: Consts.FETCH_RESULT_FAILED });\n        }\n    }\n};","export const FETCH_RESULT = \"FETCH_RESULT\";\nexport const FETCH_RESULT_SUCCESS = \"FETCH_RESULT_SUCCESS\";\nexport const FETCH_RESULT_FAILED = \"FETCH_RESULT_FAILED\";","import React, { useState, useRef, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { matchPath } from 'react-router';\n\nimport Logo from '../assets/images/logo.svg';\n\nfunction Header(props) {\n    const path = matchPath(props.location.pathname, { path: '/search/:query' });\n    const [query, setQuery] = useState(path ? path.params.query : '');\n    const timeout = useRef();\n\n    const onInputChange = (query) => {\n        setQuery(query);\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n        timeout.current = setTimeout(function () {\n            props.history.push(`/search/${query}`)\n        }, 500);\n    };\n\n    return (\n        <header>\n            <div className=\"container d-flex align-items-center justify-content-start\">\n                <Link to={'/'} title=\"Casset, Latest and Trend Musics\" target=\"_self\"><img src={Logo} alt=\"Casset\" /></Link>\n                <small>Enjoy music without borders!</small>\n                <div className=\"search-wrapper\">\n                    <input type=\"text\" placeholder=\"Looking for something?\" onChange={evt => onInputChange(evt.target.value)} value={query} />\n                    <i className=\"fal fa-search\"></i>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default withRouter(Header);","import React, { useEffect, useRef } from 'react';\nimport ReactSlider from 'react-slider';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Player(props) {\n    const { currentMusic, initialized, isPlaying, currentPos, togglePlay, setPos, setDuration, duration, playlist, setCurrentMusic } = props;\n    const audio = useRef(new Audio());\n    const currentPosInterval = useRef();\n\n    audio.current.onended = function () {\n        handleNextSong();\n    };\n\n    const handleNextSong = () => {\n        const currentSongIndex = playlist.findIndex(track => track.id === currentMusic.id);\n        let nextTrack;\n        if (currentSongIndex + 1 !== playlist.length) {\n            nextTrack = playlist[currentSongIndex + 1];\n            setCurrentMusic(nextTrack);\n            // handlePlay();\n        } else {\n            nextTrack = playlist[0];\n            setCurrentMusic(nextTrack);\n            // handlePlay();\n        }\n    }\n\n    const handlePrevSong = () => {\n        const currentSongIndex = playlist.findIndex(track => track.id === currentMusic.id);\n        let prevTrack;\n        if (currentSongIndex - 1 !== -1) {\n            prevTrack = playlist[currentSongIndex - 1];\n            setCurrentMusic(prevTrack);\n            handlePlay();\n        } else {\n            prevTrack = playlist[playlist.length - 1];\n            setCurrentMusic(prevTrack);\n            handlePlay();\n        }\n    }\n\n    const setCurrentPosHandler = () => {\n        currentPosInterval.current = setInterval(function () {\n            setPos(audio.current.currentTime);\n        }, 500);\n    }\n\n    const destroyCurrentPosHandler = () => {\n        clearInterval(currentPosInterval.current);\n        currentPosInterval.current = null;\n    }\n\n    const handlePlay = () => {\n        audio.current.src = currentMusic.link320 || currentMusic.link128 || currentMusic.link64;\n        audio.current.onloadedmetadata = function () {\n            setDuration(audio.current.duration);\n        };\n\n        if (initialized) {\n            audio.current.play().catch(() => audio.current.play());\n            if (!isPlaying) {\n                togglePlay();\n            }\n        }\n    }\n\n    const handleSeekbar = secs => {\n        setPos(secs);\n        audio.current.currentTime = secs;\n    }\n\n    useEffect(() => {\n        if (currentMusic.link320 || currentMusic.link128 || currentMusic.link64) {\n            handlePlay();\n        }\n    }, [currentMusic]);\n\n    useEffect(() => {\n        if (isPlaying) {\n            setCurrentPosHandler();\n            audio.current.play();\n        } else {\n            destroyCurrentPosHandler();\n            audio.current.pause();\n        }\n    }, [isPlaying]);\n\n    return (\n        <div className=\"player-wrapper\">\n            <div className=\"container\">\n                <div className=\"player-inner\">\n                    <div className=\"player-inner__left\">\n                        <div className=\"player-inner__left__cover\">\n                            {currentMusic.id ? <img src={currentMusic.cover || ''} alt={currentMusic.name || '-'} /> : ''}\n                        </div>\n                    </div>\n                    <div className=\"player-inner__center\">\n                        <div className=\"player-inner__center__details\">\n                            {currentMusic.id ?\n                                <React.Fragment>\n                                    <div>\n                                        <strong>{currentMusic.name || '-'}</strong>\n                                        <small>\n                                            {currentMusic.artists.length ?\n                                                (currentMusic.artists.length > 1 ? currentMusic.artists.map(\n                                                    (artist, i) => artist.name + (i !== currentMusic.artists.length - 1 ? ', ' : '')\n                                                ) : currentMusic.artists[0].name)\n                                                : ''}\n                                        </small>\n                                    </div>\n                                    <div>\n                                        <b>{parseInt(currentPos / 60)}:{currentPos % 60 < 10 ? '0' + parseInt(currentPos % 60) : parseInt(currentPos % 60)}</b>\n                                        <small>/{parseInt(duration / 60)}:{duration % 60 < 10 ? '0' + parseInt(duration % 60) : parseInt(duration % 60)}</small>\n                                    </div>\n                                </React.Fragment>\n                                :\n                                <React.Fragment>\n                                    <strong>Start Playing Something...</strong>\n                                    <div>\n                                        <b>-</b>\n                                    </div>\n                                </React.Fragment>\n                            }\n                        </div>\n                        <ReactSlider\n                            className=\"player-inner__center__seekbar\"\n                            thumbClassName=\"player-inner__center__seekbar__filled__thumb\"\n                            trackClassName=\"player-inner__center__seekbar__filled\"\n                            renderThumb={props => <div {...props}></div>}\n                            onChange={sec => handleSeekbar(sec)}\n                            min={0}\n                            value={currentPos}\n                            max={duration || 100}\n                        />\n                    </div>\n                    <div className=\"player-inner__right\">\n                        <div className=\"player-inner__right__actions\">\n                            <i className=\"fal fa-backward\" onClick={handlePrevSong} />\n                            <i className={\"fal \" + (isPlaying ? 'fa-pause' : 'fa-play')} onClick={togglePlay} />\n                            <i className=\"fal fa-forward\" onClick={handleNextSong} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying,\n        currentPos: state.playerReducer.currentPos,\n        duration: state.playerReducer.duration,\n        playlist: state.playerReducer.playlist,\n        initialized: state.playerReducer.initialized\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic()),\n        setPos: pos => dispatch(PlayerActions.setPos(pos)),\n        setDuration: duration => dispatch(PlayerActions.setDuration(duration)),\n        setCurrentMusic: music => dispatch(PlayerActions.setMusic(music))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","import store from 'store';\n\nconst RegionHandler = {\n    persian: {\n        name: 'persian',\n        slug: 'ir'\n    },\n    global: {\n        name: 'global',\n        slug: 'us'\n    },\n    init: () => {\n        if (!store.get('region')) {\n            store.set('region', 'ir');\n        }\n    },\n    set: (region) => store.set('region', region),\n    get: () => {\n        if (!store.get('region')) {\n            RegionHandler.init();\n            return 'ir';\n        }\n        return store.get('region');\n    }\n};\n\nexport default RegionHandler;","import React from 'react';\nimport { withRouter, matchPath } from 'react-router';\n\nimport RegionHandler from '../helpers/region';\n\nfunction Sidebar(props) {\n    const currentRegion = matchPath(props.location.pathname, { path: '/region/:region' });\n\n    return (\n        <aside>\n            <strong>Regions</strong>\n            <ul>\n                <li className={(!currentRegion || currentRegion.params.region === RegionHandler.global.name) ? 'active' : ''} onClick={() => props.history.push(`/region/${RegionHandler.global.name}`)}>\n                    <i className=\"fal fa-globe-americas\"></i>\n                    Global\n                </li>\n                <li className={currentRegion && currentRegion.params.region === RegionHandler.persian.name ? 'active' : ''} onClick={() => props.history.push(`/region/${RegionHandler.persian.name}`)}>\n                    <i className=\"fal fa-flag\"></i>\n                    Persian\n                </li>\n            </ul>\n        </aside>\n    );\n}\n\nexport default withRouter(Sidebar);","import React from 'react';\nimport { Route, Switch, Redirect, HashRouter as ReactRouter } from 'react-router-dom';\n\nimport Routes from './routes';\nimport Header from '../ui/header';\nimport Player from '../ui/player';\nimport Sidebar from '../ui/sidebar';\n\nconst Router = () => {\n    return (\n        <ReactRouter>\n            <div className=\"app\">\n                <Sidebar />\n                <div className=\"page\">\n                    <Header />\n                    <Switch>\n                        {Routes.map((Page, i) =>\n                            <Route key={i} exact={!!Page.exact} path={Page.path} component={(props, index) =>\n                                <Page.component key={props.match.params.id || props.match.params.query || props.match.params.region} />\n                            } />\n                        )}\n                        <Route component={() => <Redirect to=\"/\" />} />\n                    </Switch>\n                    <Player />\n                </div>\n            </div>\n        </ReactRouter>\n    )\n};\n\nexport default Router;\n","import * as Consts from '../constants/home';\n\nconst initialState = {\n    global: {\n        musicsFind: {\n            data: [],\n            loading: false\n        },\n        vitrines: {\n            data: [],\n            loading: false\n        }\n    },\n    persian: {\n        musicsFind: {\n            data: [],\n            loading: false\n        },\n        vitrines: {\n            data: [],\n            loading: false\n        }\n    }\n};\n\nconst homeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.FETCH_MUSICS_FIND:\n            return { ...state, [action.region]: { ...state[action.region], musicsFind: { ...state[action.region].musicsFind, loading: true } } };\n        case Consts.FETCH_MUSICS_FIND_SUCCESS:\n            return { ...state, [action.region]: { ...state[action.region], musicsFind: { data: action.payload, loading: false } } };\n        case Consts.FETCH_MUSICS_FIND_FAILED:\n            return { ...state, [action.region]: { ...state[action.region], musicsFind: { ...state[action.region].musicsFind, loading: false } } };\n        case Consts.FETCH_VITRINES:\n            return { ...state, [action.region]: { ...state[action.region], vitrines: { ...state[action.region].vitrines, loading: true } } };\n        case Consts.FETCH_VITRINES_SUCCESS:\n            return { ...state, [action.region]: { ...state[action.region], vitrines: { data: action.payload, loading: false } } };\n        case Consts.FETCH_VITRINES_FAILED:\n            return { ...state, [action.region]: { ...state[action.region], vitrines: { ...state[action.region].vitrines, loading: false } } };\n        default:\n            return state;\n    }\n};\n\nexport default homeReducer;","import * as Consts from '../constants/player';\n\nconst initialState = {\n    isPlaying: false,\n    music: {},\n    playlist: [],\n    currentPos: 0,\n    duration: 0,\n    initialized: false\n};\n\nconst playerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.TOGGLE_PLAY:\n            return { ...state, isPlaying: !state.isPlaying };\n        case Consts.SET_MUSIC:\n            return { ...state, music: action.payload, isPlaying: true };\n        case Consts.SET_PLAYLIST:\n            return { ...state, playlist: action.payload };\n        case Consts.SET_POS:\n            return { ...state, currentPos: action.payload };\n        case Consts.SET_DURATION:\n            return { ...state, duration: action.payload };\n        case Consts.SET_INITIALIZED:\n            return { ...state, initialized: action.payload }\n        default:\n            return state;\n    };\n};\n\nexport default playerReducer;","import * as Consts from '../constants/search';\n\nconst initialState = {\n    result: {},\n    loading: false\n};\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.FETCH_RESULT:\n            return { ...state, loading: true };\n        case Consts.FETCH_RESULT_SUCCESS:\n            return { ...state, result: action.payload, loading: false };\n        case Consts.FETCH_RESULT_FAILED:\n            return { ...state, result: null, loading: false };\n        default:\n            return state;\n    }\n};\n\nexport default searchReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport homeReducer from './reducers/home';\nimport playerReducer from './reducers/player';\nimport searchReducer from './reducers/search';\n\nconst reducers = combineReducers({\n    homeReducer,\n    playerReducer,\n    searchReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport Router from './routes/router';\n\nimport './App.scss';\nimport store from './state/store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return <Provider store={store}>\n    <Router />\n  </Provider>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8a4e1940.svg\";"],"sourceRoot":""}