{"version":3,"sources":["assets/images/logo.svg","ui/loading.js","state/actions/player.js","state/constants/player.js","ui/music.js","ui/musicsContainer.js","ui/playlist.js","ui/playlistsContainer.js","ui/vitrine.js","helpers/api.js","pages/home/index.js","state/actions/home.js","state/constants/home.js","ui/track.js","pages/playlists/index.js","routes/routes.js","pages/playlist/index.js","ui/header.js","ui/player.js","routes/router.js","state/reducers/home.js","state/reducers/player.js","state/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","props","loading","className","children","setMusic","payload","type","setPlaylist","connect","state","currentMusic","playerReducer","music","isPlaying","dispatch","PlayerActions","togglePlay","onClick","setCurrentPlaylist","id","src","cover","alt","title","name","artists","length","map","artist","i","playlist","musics","handlePlaylist","reduce","p1","p2","find","t","key","withRouter","history","push","image","PlaylistsContainer","playlists","settings","dots","infinite","speed","slidesToScroll","variableWidth","Vitrine","data","hero","API_URL","onSuccessHandler","res","resolve","onErrorHandler","err","response","console","error","Api","getMusics","Promise","axios","url","method","then","catch","getPlaylistsVitrines","count","region","getPlaylistById","getSearch","query","musicsFind","homeReducer","vitrines","fetchMusicsFind","a","result","success","fetchVitrines","useEffect","vitrine","thumbnail","play_count","Routes","routeName","component","Home","exact","path","useState","match","params","playlistId","fetchPlaylist","replace","Fragment","categories","category","Header","setQuery","timeout","useRef","to","target","Logo","placeholder","onChange","evt","value","current","clearTimeout","setTimeout","alert","currentPos","duration","setPos","pos","setDuration","setCurrentMusic","audio","Audio","currentPosInterval","onended","handleNextSong","nextTrack","currentSongIndex","findIndex","track","handlePlay","link320","link128","link64","onloadedmetadata","play","setInterval","currentTime","clearInterval","pause","parseInt","ReactSlider","thumbClassName","trackClassName","renderThumb","sec","secs","min","max","prevTrack","Router","Page","initialState","action","reducers","combineReducers","store","createStore","applyMiddleware","thunk","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a7769cf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8a4e1940.svg\";","import React from 'react';\n\nfunction Loading(props) {\n    if (props.loading) {\n        return <div className=\"loading\"><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>;\n    } else {\n        return props.children;\n    }\n}\n\nexport default Loading;","import * as Consts from '../constants/player';\n\nexport const togglePlayMusic = () => {\n    return { type: Consts.TOGGLE_PLAY };\n}\n\nexport const setMusic = (payload) => {\n    return { type: Consts.SET_MUSIC, payload };\n};\n\nexport const setPlaylist = (payload) => {\n    return { type: Consts.SET_PLAYLIST, payload };\n}\n\nexport const setPos = (payload) => {\n    return { type: Consts.SET_POS, payload };\n}\n\nexport const setDuration = (payload) => {\n    return { type: Consts.SET_DURATION, payload };\n}","export const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const SET_MUSIC = \"SET_MUSIC\";\nexport const SET_PLAYLIST = \"SET_PLAYLIST\";\nexport const SET_POS = \"SET_POS\";\nexport const SET_DURATION = \"SET_DURATION\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Music(props) {\n    const { music, currentMusic, setMusic, togglePlay, isPlaying } = props;\n\n    const handleClick = () => {\n        props.setCurrentPlaylist();\n        if (currentMusic.id === music.id) {\n            return togglePlay();\n        }\n        return setMusic(music);\n    }\n\n    return (\n        <div className=\"music-wrapper\" onClick={handleClick}>\n            <div className=\"music-wrapper__image\">\n                {currentMusic.id === music.id ?\n                    <div className=\"music-wrapper__image__overlay\">\n                        <i className={\"fal \" + (isPlaying ? 'fa-pause' : 'fa-play')}></i>\n                    </div>\n                    : ''}\n                <img src={music.cover} alt={music.title} />\n            </div>\n            <div className=\"music-wrapper__body\">\n                <strong>{music.name}</strong>\n                <small>{music.artists.length > 1 ? music.artists.map((artist, i) => artist.name + (i !== music.artists.length - 1 ? ', ' : '')) : music.artists[0].name}</small>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMusic: music => dispatch(PlayerActions.setMusic(music)),\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic())\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Loading from './loading';\nimport Music from './music';\nimport * as PlayerActions from '../state/actions/player';\n\nfunction MusicSlider(props) {\n    const { musics, loading, title, setCurrentPlaylist } = props;\n\n    const handlePlaylist = () => {\n        setCurrentPlaylist(musics.reduce((p1, p2) => {\n            return p1.find(t => t.id === p2.id) ? p1 : [...p1, p2]\n        }, []));\n    }\n\n    return (\n        <Loading\n            loading={loading}\n        >\n            <h2 className=\"section-title\">{title}</h2>\n            <div className=\"musics-container\">\n                <div className=\"musics-container__inner\">\n                    {musics.map((music, i) => <Music setCurrentPlaylist={handlePlaylist} key={i} music={music} />)}\n                </div>\n            </div>\n        </Loading>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentPlaylist: playlist => dispatch(PlayerActions.setPlaylist(playlist))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(MusicSlider);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction Playlist(props) {\n    const { playlist } = props;\n\n    return (\n        <div className=\"music-wrapper playlist-wrapper\" onClick={() => props.history.push(`/playlist/${playlist.id}`)}>\n            <div className=\"music-wrapper__image playlist-wrapper__image\">\n                <img src={playlist.image} alt={playlist.name} />\n            </div>\n            <div className=\"music-wrapper__body playlist-wrapper__body\">\n                <strong>{playlist.name}</strong>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Playlist);","import React, { useState } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport Playlist from './playlist';\n\nfunction PlaylistsContainer(props) {\n    const { playlists, loading } = props;\n\n    let settings = {\n        dots: false,\n        infinite: false,\n        speed: 250,\n        slidesToScroll: 2,\n        variableWidth: true\n    };\n\n    return (\n        <div className=\"musics-container playlists-container\">\n            <Slider {...settings}>\n                {playlists.map((playlist, i) => <div key={i} className=\"slick-item-outer\"><Playlist playlist={playlist} /></div>)}\n            </Slider>\n        </div>\n    );\n}\n\nexport default PlaylistsContainer;","import React from 'react';\n\nimport MusicsContainer from './musicsContainer';\nimport PlaylistsContainer from './playlistsContainer';\n\nfunction Vitrine(props) {\n    const { name, type, data } = props.data;\n\n    return (\n        <div className={\"vitrine-wrapper\" + (props.hero ? ' hero-wrapper' : '')}>\n            <h2 className=\"section-title vitrine-title\">{name}</h2>\n            {type === 'musics' || type === 'grid' ? <MusicsContainer musics={data} loading={false} /> : <PlaylistsContainer playlists={data} loading={false} />}\n        </div>\n    );\n}\n\nexport default Vitrine;","import axios from 'axios';\n\nconst API_URL = \"https://cassetmusic.com/api/v1\";\n\nconst onSuccessHandler = (res, resolve) => {\n    return resolve(res.data);\n}\n\nconst onErrorHandler = (err, resolve) => {\n    if (err.response) {\n        resolve(err.response.data);\n    }\n    return console.error(err);\n}\n\nconst Api = {\n    getMusics: () => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/musics`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getPlaylistsVitrines: (count = 10, region = 'us') => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/playlists/vitrines?count=${count}&region=${region}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getPlaylistById: (id) => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/playlist?id=${id}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getSearch: (query) => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/search?name=${query}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    }\n};\n\nexport default Api;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport MusicsContainer from '../../ui/musicsContainer';\nimport Vitrine from '../../ui/vitrine';\nimport * as Actions from '../../state/actions/home';\nimport Loading from '../../ui/loading';\n\nfunction Home(props) {\n    const { musicsFind, vitrines, fetchMusicsFind, fetchVitrines } = props;\n\n    useEffect(() => {\n        if (!musicsFind.data.length) {\n            fetchMusicsFind();\n        }\n        if (!vitrines.data.length) {\n            fetchVitrines();\n        }\n    }, []);\n\n    return (\n        <main className=\"container\">\n            <MusicsContainer title=\"Discover New Music\" musics={musicsFind.data} loading={musicsFind.loading} />\n            {vitrines.loading ? <Loading loading={true} ></Loading> :\n                vitrines.data.map((vitrine, i) =>\n                    vitrine.type === 'hero_sliders' ?\n                        <Vitrine hero key={i} data={vitrine} /> :\n                        <Vitrine key={i} data={vitrine} />)\n            }\n        </main>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        musicsFind: state.homeReducer.musicsFind,\n        vitrines: state.homeReducer.vitrines\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchMusicsFind: () => dispatch(Actions.fetchMusicsFind()),\n        fetchVitrines: () => dispatch(Actions.fetchVitrines())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as Consts from '../constants/home';\n\nimport Api from '../../helpers/api';\n\nexport const fetchMusicsFind = () => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_MUSICS_FIND });\n        const result = await Api.getMusics();\n        if (result.success) {\n            const musics = result.data;\n            return dispatch({ payload: musics, type: Consts.FETCH_MUSICS_FIND_SUCCESS });\n        } else {\n            return dispatch({ type: Consts.FETCH_MUSICS_FIND_FAILED });\n        }\n    };\n};\n\nexport const fetchVitrines = () => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_VITRINES });\n        const result = await Api.getPlaylistsVitrines();\n        if (result.success) {\n            const vitrines = result.data;\n            return dispatch({ payload: vitrines, type: Consts.FETCH_VITRINES_SUCCESS });\n        } else {\n            return dispatch({ type: Consts.FETCH_VITRINES_FAILED });\n        }\n    }\n};","export const FETCH_MUSICS_FIND = \"FETCH_MUSICS_FIND\";\nexport const FETCH_MUSICS_FIND_SUCCESS = \"FETCH_MUSICS_FIND_SUCCESS\";\nexport const FETCH_MUSICS_FIND_FAILED = \"FETCH_MUSICS_FIND_FAILED\";\nexport const FETCH_VITRINES = \"FETCH_VITRINES\";\nexport const FETCH_VITRINES_SUCCESS = \"FETCH_VITRINES_SUCCESS\";\nexport const FETCH_VITRINES_FAILED = \"FETCH_VITRINES_FAILED\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Track(props) {\n    const { music, currentMusic, setMusic, togglePlay, isPlaying } = props;\n\n    const handleClick = () => {\n        props.setCurrentPlaylist();\n        if (currentMusic.id === music.id) {\n            return togglePlay();\n        }\n        return setMusic(music);\n    }\n\n    return (\n        <div className={\"track\" + (currentMusic.id === music.id ? ' active' : '')} onClick={handleClick}>\n            <div className=\"track__image\">\n                <img src={music.thumbnail && music.thumbnail.length ? music.thumbnail : music.cover} alt={music.name} />\n            </div>\n            <div className=\"track__body\">\n                <div className=\"d-flex align-items-center justify-content-start\">\n                    <h2>{music.name}</h2>\n                    <h3>{music.artists.map((artist, i) => artist.name + (i !== music.artists.length - 1 ? ', ' : ''))}</h3>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-end\">\n                    <b className=\"play-count\">{music.play_count || '-'} <small>plays</small></b>\n                    {currentMusic.id === music.id ?\n                        (isPlaying ?\n                            <i className=\"fal fa-pause\"></i>\n                            : <i className=\"fal fa-play\"></i>)\n                        : <i className=\"fal fa-play\"></i>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMusic: music => dispatch(PlayerActions.setMusic(music)),\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic())\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Track);","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Track from '../../ui/track';\nimport Api from '../../helpers/api';\nimport Loading from '../../ui/loading';\nimport PlaylistsContainer from '../../ui/playlistsContainer';\n\nfunction Playlist(props) {\n    const playlistId = props.match.params.id;\n    const [playlist, setPlaylist] = useState({\n        data: {},\n        loading: true\n    });\n\n    const fetchPlaylist = async () => {\n        setPlaylist({ ...playlist, loading: true });\n        const result = await Api.getPlaylistById(playlistId);\n        if (result.success) {\n            setPlaylist(result.data);\n        } else {\n            props.history.replace('/');\n        }\n    };\n\n    useEffect(() => {\n        if (playlistId) {\n            fetchPlaylist();\n        }\n    }, []);\n\n    return (\n        <main className=\"container\">\n            <PlaylistsContainer playlists={playlist.data} loading={false} />\n        </main>\n    );\n}\n\nexport default withRouter(Playlist);","import Home from '../pages/home';\nimport Playlist from '../pages/playlist';\nimport Playlists from '../pages/playlists';\n\nconst Routes = [\n    {\n        routeName: 'home',\n        component: Home,\n        exact: true,\n        path: '/'\n    },\n    {\n        routeName: 'playlist',\n        component: Playlist,\n        exact: true,\n        path: '/playlist/:id'\n    },\n    {\n        routeName: 'playlists',\n        component: Playlists,\n        exact: true,\n        path: '/playlists/:id'\n    }\n];\n\nexport default Routes;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Track from '../../ui/track';\nimport Api from '../../helpers/api';\nimport Loading from '../../ui/loading';\nimport PlaylistsContainer from '../../ui/playlistsContainer';\n\nimport * as PlayerActions from '../../state/actions/player';\n\nfunction Playlist(props) {\n    const { setCurrentPlaylist } = props;\n    const [playlistId] = useState(props.match.params.id);\n    const [playlist, setPlaylist] = useState({\n        data: {},\n        loading: true\n    });\n\n    const fetchPlaylist = async () => {\n        setPlaylist({ ...playlist, loading: true });\n        const result = await Api.getPlaylistById(playlistId);\n        if (result.success) {\n            if (result.data.musics) {\n                // Removing Duplicate ID musics\n                setPlaylist({\n                    data: {\n                        ...result.data,\n                        musics: result.data.musics.reduce((p1, p2) => {\n                            return p1.find(t => t.id === p2.id) ? p1 : [...p1, p2]\n                        }, [])\n                    }\n                    , loading: false\n                });\n            } else {\n                setPlaylist({ data: result.data, loading: false });\n            }\n        } else {\n            props.history.replace('/');\n        }\n    };\n\n    const handlePlaylist = () => {\n        setCurrentPlaylist(playlist.data.musics.reduce((p1, p2) => {\n            return p1.find(t => t.id === p2.id) ? p1 : [...p1, p2]\n        }, []));\n    }\n\n    useEffect(() => {\n        if (playlistId) {\n            fetchPlaylist();\n        }\n    }, []);\n\n    return (\n        <main className=\"container\">\n            {playlist.loading ? <Loading loading={playlist.loading}></Loading> :\n                playlist.data.musics ? <React.Fragment>\n                    <div className=\"d-flex align-items-center justify-content-center flex-column\">\n                        <div className=\"circle-image\">\n                            <img src={playlist.data.playlist.image} alt={playlist.data.playlist.name} />\n                        </div>\n                        <h1>{playlist.data.playlist.name}</h1>\n                        <small className=\"playlist-artists mt-5\">{playlist.data.artists.map((artist, i) => artist.name + (i !== playlist.data.artists.length - 1 ? ', ' : ''))}</small>\n                        <div className=\"tags-wrapper\">\n                            {playlist.data.categories.map((category, i) => <span key={i} className=\"tag\">{category.name}</span>)}\n                        </div>\n                    </div>\n                    <div className=\"tracks-wrapper\">\n                        {playlist.data.musics.map((music, i) => <Track setCurrentPlaylist={handlePlaylist} music={music} key={i} />)}\n                    </div>\n                </React.Fragment> :\n                    <React.Fragment>\n                        <h1 className=\"section-title\">Playlists</h1>\n                        <PlaylistsContainer playlists={playlist.data} />\n                    </React.Fragment>\n            }\n        </main>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentPlaylist: playlist => dispatch(PlayerActions.setPlaylist(playlist))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(Playlist));","import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from '../assets/images/logo.svg';\n\nfunction Header(props) {\n    const [query, setQuery] = useState('');\n    const timeout = useRef();\n\n    const onInputChange = (evt) => {\n        setQuery(evt.target.value);\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n        timeout.current = setTimeout(function () {\n            alert('hi');\n        }, 500);\n    };\n\n    return (\n        <header>\n            <div className=\"container d-flex align-items-center justify-content-start\">\n                <Link to={'/'} title=\"Casset, Latest and Trend Musics\" target=\"_self\"><img src={Logo} alt=\"Casset\" /></Link>\n                <small>Enjoy music without borders!</small>\n                <div className=\"search-wrapper\">\n                    <input type=\"text\" placeholder=\"Looking for something?\" onChange={onInputChange} value={query} />\n                    <i className=\"fal fa-search\"></i>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React, { useEffect, useRef } from 'react';\nimport ReactSlider from 'react-slider';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Player(props) {\n    const { currentMusic, isPlaying, currentPos, togglePlay, setPos, setDuration, duration, playlist, setCurrentMusic } = props;\n    const audio = useRef(new Audio());\n    const currentPosInterval = useRef();\n\n    audio.current.onended = function () {\n        handleNextSong();\n    };\n\n    const handleNextSong = () => {\n        const currentSongIndex = playlist.findIndex(track => track.id === currentMusic.id);\n        let nextTrack;\n        if (currentSongIndex + 1 !== playlist.length) {\n            nextTrack = playlist[currentSongIndex + 1];\n            setCurrentMusic(nextTrack);\n            handlePlay();\n        } else {\n            nextTrack = playlist[0];\n            setCurrentMusic(nextTrack);\n            handlePlay();\n        }\n    }\n\n    const handlePrevSong = () => {\n        const currentSongIndex = playlist.findIndex(track => track.id === currentMusic.id);\n        let prevTrack;\n        if (currentSongIndex - 1 !== -1) {\n            prevTrack = playlist[currentSongIndex - 1];\n            setCurrentMusic(prevTrack);\n            handlePlay();\n        } else {\n            prevTrack = playlist[playlist.length - 1];\n            setCurrentMusic(prevTrack);\n            handlePlay();\n        }\n    }\n\n    const setCurrentPosHandler = () => {\n        currentPosInterval.current = setInterval(function () {\n            setPos(audio.current.currentTime);\n        }, 500);\n    }\n\n    const destroyCurrentPosHandler = () => {\n        clearInterval(currentPosInterval.current);\n        currentPosInterval.current = null;\n    }\n\n    const handlePlay = () => {\n        audio.current.src = currentMusic.link320 || currentMusic.link128 || currentMusic.link64;\n        audio.current.onloadedmetadata = function () {\n            setDuration(audio.current.duration);\n        };\n        audio.current.play().catch(() => audio.current.play());\n        if (!isPlaying) {\n            togglePlay();\n        }\n    }\n\n    const handleSeekbar = secs => {\n        setPos(secs);\n        audio.current.currentTime = secs;\n    }\n\n    useEffect(() => {\n        if (currentMusic.link320 || currentMusic.link128 || currentMusic.link64) {\n            handlePlay();\n        }\n    }, [currentMusic]);\n\n    useEffect(() => {\n        if (isPlaying) {\n            setCurrentPosHandler();\n            audio.current.play();\n        } else {\n            destroyCurrentPosHandler();\n            audio.current.pause();\n        }\n    }, [isPlaying]);\n\n    return (\n        <div className=\"player-wrapper\">\n            <div className=\"container\">\n                <div className=\"player-inner\">\n                    <div className=\"player-inner__left\">\n                        <div className=\"player-inner__left__cover\">\n                            {currentMusic.id ? <img src={currentMusic.cover || ''} alt={currentMusic.name || '-'} /> : ''}\n                        </div>\n                    </div>\n                    <div className=\"player-inner__center\">\n                        <div className=\"player-inner__center__details\">\n                            {currentMusic.id ?\n                                <React.Fragment>\n                                    <div>\n                                        <strong>{currentMusic.name || '-'}</strong>\n                                        <small>\n                                            {currentMusic.artists.length ?\n                                                (currentMusic.artists.length > 1 ? currentMusic.artists.map(\n                                                    (artist, i) => artist.name + (i !== currentMusic.artists.length - 1 ? ', ' : '')\n                                                ) : currentMusic.artists[0].name)\n                                                : ''}\n                                        </small>\n                                    </div>\n                                    <div>\n                                        <b>{parseInt(currentPos / 60)}:{currentPos % 60 < 10 ? '0' + parseInt(currentPos % 60) : parseInt(currentPos % 60)}</b>\n                                        <small>/{parseInt(duration / 60)}:{duration % 60 < 10 ? '0' + parseInt(duration % 60) : parseInt(duration % 60)}</small>\n                                    </div>\n                                </React.Fragment>\n                                :\n                                <React.Fragment>\n                                    <strong>Start Playing Something...</strong>\n                                    <div>\n                                        <b>-</b>\n                                    </div>\n                                </React.Fragment>\n                            }\n                        </div>\n                        <ReactSlider\n                            className=\"player-inner__center__seekbar\"\n                            thumbClassName=\"player-inner__center__seekbar__filled__thumb\"\n                            trackClassName=\"player-inner__center__seekbar__filled\"\n                            renderThumb={props => <div {...props}></div>}\n                            onChange={sec => handleSeekbar(sec)}\n                            min={0}\n                            value={currentPos}\n                            max={duration || 100}\n                        />\n                    </div>\n                    <div className=\"player-inner__right\">\n                        <div className=\"player-inner__right__actions\">\n                            <i className=\"fal fa-backward\" onClick={handlePrevSong} />\n                            <i className={\"fal \" + (isPlaying ? 'fa-pause' : 'fa-play')} onClick={togglePlay} />\n                            <i className=\"fal fa-forward\" onClick={handleNextSong} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying,\n        currentPos: state.playerReducer.currentPos,\n        duration: state.playerReducer.duration,\n        playlist: state.playerReducer.playlist\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic()),\n        setPos: pos => dispatch(PlayerActions.setPos(pos)),\n        setDuration: duration => dispatch(PlayerActions.setDuration(duration)),\n        setCurrentMusic: music => dispatch(PlayerActions.setMusic(music))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","import React from 'react';\nimport { Route, Switch, Redirect, HashRouter as ReactRouter } from 'react-router-dom';\n\nimport Routes from './routes';\nimport Header from '../ui/header';\nimport Player from '../ui/player';\n\nconst Router = () => {\n    return (\n        <ReactRouter>\n            <Header />\n            <Switch>\n                {Routes.map((Page, i) =>\n                    <Route key={i} exact={!!Page.exact} path={Page.path} component={(props) => <Page.component key={props.match.params.id} />} />\n                )}\n                <Route component={() => <Redirect to=\"/\" />} />\n            </Switch>\n            <Player />\n        </ReactRouter>\n    )\n};\n\nexport default Router;\n","import * as Consts from '../constants/home';\n\nconst initialState = {\n    musicsFind: {\n        data: [],\n        loading: false\n    },\n    vitrines: {\n        data: [],\n        loading: false\n    }\n};\n\nconst homeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.FETCH_MUSICS_FIND:\n            return { ...state, musicsFind: { ...state.musicsFind, loading: true } };\n        case Consts.FETCH_MUSICS_FIND_SUCCESS:\n            return { ...state, musicsFind: { data: action.payload, loading: false } };\n        case Consts.FETCH_MUSICS_FIND_FAILED:\n            return { ...state, musicsFind: { ...state.musicsFind, loading: false } };\n        case Consts.FETCH_VITRINES:\n            return { ...state, vitrines: { ...state.vitrines, loading: true } };\n        case Consts.FETCH_VITRINES_SUCCESS:\n            return { ...state, vitrines: { data: action.payload, loading: false } };\n        case Consts.FETCH_VITRINES_FAILED:\n            return { ...state, vitrines: { ...state.vitrines, loading: false } };\n        default:\n            return state;\n    }\n};\n\nexport default homeReducer;","import * as Consts from '../constants/player';\n\nconst initialState = {\n    isPlaying: false,\n    music: {},\n    playlist: [],\n    currentPos: 0,\n    duration: 0\n};\n\nconst playerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.TOGGLE_PLAY:\n            return { ...state, isPlaying: !state.isPlaying };\n        case Consts.SET_MUSIC:\n            return { ...state, music: action.payload, isPlaying: true };\n        case Consts.SET_PLAYLIST:\n            return { ...state, playlist: action.payload };\n        case Consts.SET_POS:\n            return { ...state, currentPos: action.payload };\n        case Consts.SET_DURATION:\n            return { ...state, duration: action.payload };\n        default:\n            return state;\n    };\n};\n\nexport default playerReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport homeReducer from './reducers/home';\nimport playerReducer from './reducers/player';\n\nconst reducers = combineReducers({\n    homeReducer,\n    playerReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport Router from './routes/router';\n\nimport './App.scss';\nimport store from './state/store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return <Provider store={store}>\n    <Router />\n  </Provider>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}